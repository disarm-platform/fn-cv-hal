}
}
births_pre_irs$month_factor
dim(births_pre_irs)
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
# gam_mod <- gam(LBW ~ s(month_factor, by = hf),
#                data = births_pre_irs,
#                family="binomial")
#plot(predict(gam_mod, type="response"), births_pre_irs_month_hf$x)
gam_mod2 <- gam(x ~ s(month_factor, bs="gp") + hf,
data = births_pre_irs,
family="binomial")
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
# gam_mod <- gam(LBW ~ s(month_factor, by = hf),
#                data = births_pre_irs,
#                family="binomial")
#plot(predict(gam_mod, type="response"), births_pre_irs_month_hf$x)
gam_mod2 <- gam(LBW ~ s(month_factor, bs="gp") + hf,
data = births_pre_irs,
family="binomial")
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
# gam_mod <- gam(LBW ~ s(month_factor, by = healthfacility),
#                data = births_pre_irs,
#                family="binomial")
#plot(predict(gam_mod, type="response"), births_pre_irs_month_hf$x)
gam_mod2 <- gam(LBW ~ s(month_factor, bs="gp") + healthfacility,
data = births_pre_irs,
family="binomial")
plot(predict(gam_mod2, births_pre_irs_month_hf, type="response"), births_pre_irs_month_hf$x)
births_pre_irs_month_hf <- births_pre_irs_month_hf[complete.cases(births_pre_irs_month_hf),]
# Generate list of missing values
facilites <- unique(births_pre_irs_month_hf$hf)
missing_hf_months <- data.frame(hf=NULL, month=NULL)
for(hf in facilites){
sub <- births_pre_irs_month_hf[which(births_pre_irs_month_hf$hf == hf),]
missing_months <- which(!(1:38 %in% unique(sub$month)))
if(length(missing_months)>0){
missing_hf_months <- rbind(missing_hf_months,
data.frame(healthfacility=hf,
month_factor=missing_months))
}
}
plot(predict(gam_mod2, births_pre_irs_month_hf, type="response"), births_pre_irs_month_hf$x)
gam_mod2
head(births_pre_irs_month_hf)
births_pre_irs_month_hf <- aggregate(births_pre_irs$LBW,
by = list(healthfacility=births_pre_irs$healthfacility,
month_factor=births_pre_irs$month_factor),
mean, na.rm=T)
plot(predict(gam_mod2, births_pre_irs_month_hf, type="response"), births_pre_irs_month_hf$x)
abline(0,1)
# Try RF (treating prevalence as continuous outcome)
rf_mod <- randomForest(x ~ month_factor + healthfacility,
data = births_pre_irs)
births_pre_irs$LBW
# Try RF (treating prevalence as continuous outcome)
rf_mod <- randomForest(as.factor(LBW) ~ month_factor + healthfacility,
data = births_pre_irs)
head(births_pre_irs)
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
lbw_pre_irs_complete <-     births_pre_irs[c("LBW", "month_factor", "healthfacility")]
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
lbw_pre_irs_complete <-     births_pre_irs[,c("LBW", "month_factor", "healthfacility")]
lbw_pre_irs_complete <- lbw_pre_irs_complete[complete.cases(lbw_pre_irs_complete)]
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
lbw_pre_irs_complete <-     births_pre_irs[,c("LBW", "month_factor", "healthfacility")]
lbw_pre_irs_complete <- lbw_pre_irs_complete[complete.cases(lbw_pre_irs_complete),]
head(lbw_pre_irs_complete)
# gam_mod <- gam(LBW ~ s(month_factor, by = healthfacility),
#                data = births_pre_irs,
#                family="binomial")
#plot(predict(gam_mod, type="response"), births_pre_irs_month_hf$x)
gam_mod2 <- gam(LBW ~ s(month_factor, bs="gp") + healthfacility,
data = lbw_pre_irs_complete,
family="binomial")
plot(predict(gam_mod2, births_pre_irs_month_hf, type="response"), births_pre_irs_month_hf$x)
# Try RF (treating prevalence as continuous outcome)
rf_mod <- randomForest(as.factor(LBW) ~ month_factor + healthfacility,
data = lbw_pre_irs_complete)
plot(predict(rf_mod, births_pre_irs_month_hf), births_pre_irs_month_hf$x)
plot(predict(rf_mod, births_pre_irs_month_hf, "prob"), births_pre_irs_month_hf$x)
plot(predict(rf_mod, births_pre_irs_month_hf, type="prob"), births_pre_irs_month_hf$x)
head(predict(rf_mod, births_pre_irs_month_hf, type="prob"))
plot(predict(rf_mod, births_pre_irs_month_hf, type="prob")[,2], births_pre_irs_month_hf$x)
head(lbw_pre_irs_complete)
mean(lbw_pre_irs_complete$LBW)
importance(rf_mod)
plot(gam_mod2)
partialPlot(rf_mod)
partialPlot(rf_mod, x.var="month_factor")
partialPlot(rf_mod, births_pre_irs_month_hf, x.var="month_factor")
# Try RF (treating prevalence as continuous outcome)
rf_mod <- randomForest(as.factor(LBW) ~ month_factor + healthfacility,
data = lbw_pre_irs_complete, ntree=1000)
plot(predict(rf_mod, births_pre_irs_month_hf, type="prob")[,2], births_pre_irs_month_hf$x)
abline(0,1)
plot(predict(gam_mod2, births_pre_irs_month_hf, type="response"), births_pre_irs_month_hf$x)
abline(0,1)
plot(predict(gam_mod2, births_pre_irs_month_hf,
type="response"), births_pre_irs_month_hf$x,
asp = 1)
abline(0,1)
# Try RF (treating prevalence as continuous outcome)
rf_mod <- randomForest(as.factor(lbw_pre_irs_complete$LBW) ~ month_factor + healthfacility,
data = lbw_pre_irs_complete, ntree=1000)
?randomForest
head(predict(rf_mod, births_pre_irs_month_hf)
)
mean(predict(rf_mod, births_pre_irs_month_hf))
mean(predict(rf_mod, births_pre_irs_month_hf), na.rm=T)
mean(as.numeric(predict(rf_mod, births_pre_irs_month_hf), na.rm=T))
library(ranger)
?ranger
rf_mod <- ranger(as.factor(lbw_pre_irs_complete$LBW) ~ month_factor + healthfacility,
data = lbw_pre_irs_complete)
head(predict(rf_mod))
head(predict(rf_mod, births_pre_irs_month_hf))
?predict.ranger
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
t<-predict(rf_mod, births_pre_irs_month_hf)
tt<-predict(rf_mod, births_pre_irs_month_hf)
tt$predictions[,2]
tt$predictions
rf_mod <- ranger(as.factor(lbw_pre_irs_complete$LBW) ~ month_factor + healthfacility,
data = lbw_pre_irs_complete, probability = TRUE)
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
abline(0,1)
plot(predict(gam_mod2, births_pre_irs_month_hf,
type="response"), births_pre_irs_month_hf$x)
abline(0,1)
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
abline(0,1)
# Use model to predict at missing months and add predictions to observations
missing_hf_months$x <- predict(rf_mod, missing_hf_months)$predictions[,2]
head(missing_hf_months)
births_pre_irs_month_hf_gapfilled <- rbind(births_pre_irs_month_hf,
missing_hf_months)
head(births_pre_irs_month_hf_gapfilled)
# Remove last year(s) of data
births_pre_irs_month_hf_train <- births_pre_irs_month_hf_gapfilled[births_pre_irs_month_hf_gapfilled$month<25,]
## Now model IRS HFs as a function of non-IRS HF data
irs_hfs <- unique(births_pre_irs$healthfacility[births_pre_irs$IRS==1])
non_irs_hfs <- unique(births_pre_irs$healthfacility[births_pre_irs$IRS==0])
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train[which(births_pre_irs_month_hf_train$hf %in% irs_hfs),]
# Sort by month
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train_irs[order(births_pre_irs_month_hf_train_irs$month),]
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$hf %in% non_irs_hfs[i])]
births_pre_irs_month_hf_train_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
# Fit model
form <- formula(paste(c("x ~ month + hf +"), paste(non_irs_hfs_nowhitespace, collapse = "+")))
form
# Fit model
form <- formula(paste(c("x ~ month + healthfacility +"), paste(non_irs_hfs_nowhitespace, collapse = "+")))
rf_synth_control <- ranger(form, data = births_pre_irs_month_hf_train_irs, probability=TURE)
rf_synth_control <- ranger(form, data = births_pre_irs_month_hf_train_irs, probability=TRUE)
names(births_pre_irs_month_hf_train_irs)
form
# Fit model
form <- formula(paste(c("x ~ month_factor + healthfacility +"), paste(non_irs_hfs_nowhitespace, collapse = "+")))
rf_synth_control <- ranger(form, data = births_pre_irs_month_hf_train_irs, probability=TRUE)
rf_synth_control <- randomForest(form, data = births_pre_irs_month_hf_train_irs)
head(births_pre_irs_month_hf_train_irs$x)
head(births_pre_irs_month_hf_train_irs)
births_pre_irs_month_hf_train_irs
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train[which(births_pre_irs_month_hf_train$hf %in% irs_hfs),]
births_pre_irs_month_hf_train_irs
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train[which(births_pre_irs_month_hf_train$healthfacility %in% irs_hfs),]
head(births_pre_irs_month_hf_train_irs)
# Sort by month
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train_irs[order(births_pre_irs_month_hf_train_irs$month_factor),]
head(births_pre_irs_month_hf_train_irs)
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$hf %in% non_irs_hfs[i])]
births_pre_irs_month_hf_train_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
head(births_pre_irs_month_hf_train)
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$healthfacility %in% non_irs_hfs[i])]
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$healthfacility %in% non_irs_hfs[i])]
births_pre_irs_month_hf_train_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
# Sort by month
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train_irs[order(births_pre_irs_month_hf_train_irs$month_factor),]
# Add prevalence in other facilites as covariates
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$healthfacility %in% non_irs_hfs[i])]
births_pre_irs_month_hf_train_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
# Sort by month
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train_irs[order(births_pre_irs_month_hf_train_irs$month_factor),]
# Add prevalence in other facilites as covariates
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
non_irs_hfs
i<-1
which(births_pre_irs_month_hf_train$healthfacility %in% non_irs_hfs[i])
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$healthfacility %in% non_irs_hfs[i])]
as.character(non_irs_hfs_nowhitespace[i])
length(irs_hfs)
rep(outcome, each=length(irs_hfs))
dim(births_pre_irs_month_hf_train_irs)
irs_hfs
15*24
head(births_pre_irs_month_hf_train_irs)
table(births_pre_irs_month_hf_train_irs$month_factor)
births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$month_factor==21,]
# Remove last year(s) of data
births_pre_irs_month_hf_train <- births_pre_irs_month_hf_gapfilled[births_pre_irs_month_hf_gapfilled$month<25,]
head(births_pre_irs_month_hf_train)
dim(births_pre_irs_month_hf_train)
table(births_pre_irs_month_hf_train$month_factor)
rm(list=ls())
library(lubridate)
library(mgcv)
library(randomForest)
library(stringr)
library(lubridate)
# Experiment just using LBW
# Synthetic control
births_all <- read.csv("~/Documents/Work/Supervision/Michelle Roh/IRS_study/2019-07-15_VCABO_HF_Data_clean.csv")
# Just look at pre-IRS
births_pre_irs <- subset(births_all, births_all$postIRS==0)
# Aggregate to facility/month
births_pre_irs$calendar_month <- month(mdy(births_pre_irs$date))
births_pre_irs$calendar_year <- year(mdy(births_pre_irs$date))
births_pre_irs_month_hf <- aggregate(births_pre_irs$LBW,
by = list(healthfacility=births_pre_irs$healthfacility,
month_factor=births_pre_irs$month_factor),
mean, na.rm=T)
births_pre_irs_month_hf <- births_pre_irs_month_hf[complete.cases(births_pre_irs_month_hf),]
# Generate list of missing values
facilites <- unique(births_pre_irs_month_hf$hf)
missing_hf_months <- data.frame(hf=NULL, month=NULL)
for(hf in facilites){
sub <- births_pre_irs_month_hf[which(births_pre_irs_month_hf$hf == hf),]
missing_months <- which(!(1:38 %in% unique(sub$month)))
if(length(missing_months)>0){
missing_hf_months <- rbind(missing_hf_months,
data.frame(healthfacility=hf,
month_factor=missing_months))
}
}
missing_hf_months
# gap-fill months.
# First identify which month/hfs are missing
# first remove row with missing data (why are some LBW NA?)
births_pre_irs_month_hf <- births_pre_irs_month_hf[complete.cases(births_pre_irs_month_hf),]
# Generate list of missing values
facilites <- unique(births_pre_irs_month_hf$healthfacility)
missing_hf_months <- data.frame(healthfacility=NULL, month_factor=NULL)
facilites
hf<-"Apapai HCIV"
sub <- births_pre_irs_month_hf[which(births_pre_irs_month_hf$healthfacility == hf),]
sub
missing_months <- which(!(1:38 %in% unique(sub$month_factor)))
missing_months
births_pre_irs_month_hf <- births_pre_irs_month_hf[complete.cases(births_pre_irs_month_hf),]
# Generate list of missing values
facilites <- unique(births_pre_irs_month_hf$healthfacility)
missing_hf_months <- data.frame(healthfacility=NULL, month_factor=NULL)
for(hf in facilites){
sub <- births_pre_irs_month_hf[which(births_pre_irs_month_hf$healthfacility == hf),]
missing_months <- which(!(1:38 %in% unique(sub$month_factor)))
if(length(missing_months)>0){
missing_hf_months <- rbind(missing_hf_months,
data.frame(healthfacility=hf,
month_factor=missing_months))
}
}
missing_hf_months
# Fit model If you have coordinates for HFs you could
# use a spatio-temporal model
lbw_pre_irs_complete <- births_pre_irs[,c("LBW", "month_factor", "healthfacility")]
lbw_pre_irs_complete <- lbw_pre_irs_complete[complete.cases(lbw_pre_irs_complete),]
# Try RF (treating prevalence as continuous outcome)
rf_mod <- ranger(as.factor(lbw_pre_irs_complete$LBW) ~ month_factor + healthfacility,
data = lbw_pre_irs_complete, probability = TRUE)
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
abline(0,1)
# Use model to predict at missing months and add predictions to observations
missing_hf_months$x <- predict(rf_mod, missing_hf_months)$predictions[,2]
head(missing_hf_months)
dim(missing_hf_months)
births_pre_irs_month_hf_gapfilled <- rbind(births_pre_irs_month_hf,
missing_hf_months)
dim(births_pre_irs_month_hf_gapfilled)
table(births_pre_irs_month_hf_gapfilled$month_factor)
# Remove last year(s) of data
births_pre_irs_month_hf_train <- births_pre_irs_month_hf_gapfilled[births_pre_irs_month_hf_gapfilled$month<25,]
table(births_pre_irs_month_hf_train$month_factor)
## Now model IRS HFs as a function of non-IRS HF data
irs_hfs <- unique(births_pre_irs$healthfacility[births_pre_irs$IRS==1])
non_irs_hfs <- unique(births_pre_irs$healthfacility[births_pre_irs$IRS==0])
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train[which(births_pre_irs_month_hf_train$healthfacility %in% irs_hfs),]
# Sort by month
births_pre_irs_month_hf_train_irs <- births_pre_irs_month_hf_train_irs[order(births_pre_irs_month_hf_train_irs$month_factor),]
# Add prevalence in other facilites as covariates
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_train$x[which(births_pre_irs_month_hf_train$healthfacility %in% non_irs_hfs[i])]
births_pre_irs_month_hf_train_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
head(births_pre_irs_month_hf_train_irs)
# Fit model
form <- formula(paste(c("x ~ month_factor + healthfacility +"), paste(non_irs_hfs_nowhitespace, collapse = "+")))
rf_synth_control <- ranger(form, data = births_pre_irs_month_hf_train_irs, probability=TRUE)
# compare observed/expected
plot(predict(rf_synth_control)$predictions[,2], births_pre_irs_month_hf_train_irs$x)
# compare observed/expected
plot(predict(rf_synth_control, births_pre_irs_month_hf_train_irs)$predictions[,2], births_pre_irs_month_hf_train_irs$x)
abline(0,1)
# Plot over the time frame for a HF
plot(births_pre_irs_month_hf_train_irs$x[births_pre_irs_month_hf_train_irs$hf=="Iwemba HCIII"], type="l")
lines(births_pre_irs_month_hf_train_irs$x[births_pre_irs_month_hf_train_irs$hf=="Buwunga HCIII"], type="l", col="red")
importance(rf_synth_control)
dim(births_pre_irs_month_hf_train_irs)
head(predict(rf_synth_control, births_pre_irs_month_hf_train_irs))
dim(predict(rf_synth_control, births_pre_irs_month_hf_train_irs)$predictions)
rf_synth_control <- ranger(form, data = births_pre_irs_month_hf_train_irs)
head(predict(rf_synth_control, births_pre_irs_month_hf_train_irs))
head(predict(rf_synth_control, births_pre_irs_month_hf_train_irs)$predictions)
# compare observed/expected
plot(predict(rf_synth_control, births_pre_irs_month_hf_train_irs)$predictions, births_pre_irs_month_hf_train_irs$x)
abline(0,1)
# Plot over the time frame for a HF
plot(births_pre_irs_month_hf_train_irs$x[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII"], type="l")
lines(births_pre_irs_month_hf_train_irs$x[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII"], type="l", col="red")
lines(predict(births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII",], type="l", col="red")
lines(predict(births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII",]), type="l", col="red")
lines(predict(rf_synth_control,
births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII",]), type="l", col="red")
head(predict(rf_synth_control,
births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII",]))
lines(predict(rf_synth_control,
births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII",])$predictions, type="l", col="red")
# Plot over the time frame for a HF
plot(births_pre_irs_month_hf_train_irs$x[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII"], type="l")
lines(predict(rf_synth_control,
births_pre_irs_month_hf_train_irs[births_pre_irs_month_hf_train_irs$healthfacility=="Iwemba HCIII",])$predictions, type="l", col="red")
# compare observed/expected
plot(predict(rf_synth_control, births_pre_irs_month_hf_train_irs)$predictions, births_pre_irs_month_hf_train_irs$x)
abline(0,1)
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled[which(births_pre_irs_month_hf_gapfilled$healthfacility %in% irs_hfs),]
# Sort by month
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled_irs[order(births_pre_irs_month_hf_gapfilled_irs$month_factor),]
# Add prevalence in other facilites as covariates
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
head(births_pre_irs_month_hf_gapfilled_irs)
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_gapfilled_irs$x[which(births_pre_irs_month_hf_gapfilled_irs$healthfacility %in% non_irs_hfs[i])]
births_pre_irs_month_hf_gapfilled_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled[which(births_pre_irs_month_hf_gapfilled$healthfacility %in% irs_hfs),]
# Sort by month
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled_irs[order(births_pre_irs_month_hf_gapfilled_irs$month_factor),]
# Add prevalence in other facilites as covariates
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
i<-1
outcome <- births_pre_irs_month_hf_gapfilled_irs$x[which(births_pre_irs_month_hf_gapfilled_irs$healthfacility %in% non_irs_hfs[i])]
outcome
head(births_pre_irs_month_hf_gapfilled_irs$healthfacility)
non_irs_hfs[i]
which(births_pre_irs_month_hf_gapfilled_irs$healthfacility %in% non_irs_hfs[i]
)
irs_hfs
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled[which(births_pre_irs_month_hf_gapfilled$healthfacility %in% irs_hfs),]
table(births_pre_irs_month_hf_gapfilled_irs$healthfacility)
sum(table(births_pre_irs_month_hf_gapfilled_irs)>0)
sum(table(births_pre_irs_month_hf_gapfilled_irs$healthfacility)>0)
# Sort by month
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled_irs[order(births_pre_irs_month_hf_gapfilled_irs$month_factor),]
sum(table(births_pre_irs_month_hf_gapfilled_irs$healthfacility)>0)
non_irs_hfs[i]
table(births_pre_irs_month_hf_gapfilled_irs$healthfacility)
births_pre_irs_month_hf_train
table(births_pre_irs_month_hf_train$healthfacility)
irs_hfs
outcome <- births_pre_irs_month_hf_gapfilled$x[which(births_pre_irs_month_hf_gapfilled$healthfacility %in% non_irs_hfs[i])]
outcome
head(births_pre_irs_month_hf_gapfilled_irs)
births_pre_irs_month_hf_gapfilled_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
head(births_pre_irs_month_hf_gapfilled_irs)
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled[which(births_pre_irs_month_hf_gapfilled$healthfacility %in% irs_hfs),]
# Sort by month
births_pre_irs_month_hf_gapfilled_irs <- births_pre_irs_month_hf_gapfilled_irs[order(births_pre_irs_month_hf_gapfilled_irs$month_factor),]
# Add prevalence in other facilites as covariates
non_irs_hfs_nowhitespace <- str_replace_all(string=non_irs_hfs, pattern=" ", repl="")
for(i in 1:length(non_irs_hfs)){
outcome <- births_pre_irs_month_hf_gapfilled$x[which(births_pre_irs_month_hf_gapfilled$healthfacility %in% non_irs_hfs[i])]
births_pre_irs_month_hf_gapfilled_irs[[as.character(non_irs_hfs_nowhitespace[i])]] <- rep(outcome, each=length(irs_hfs))
}
head(births_pre_irs_month_hf_gapfilled_irs)
# Remove last year(s) of data
births_pre_irs_month_hf_gapfilled_irs_train <- births_pre_irs_month_hf_gapfilled_irs[births_pre_irs_month_hf_gapfilled_irs$month_factor<25,]
# Fit model
form <- formula(paste(c("x ~ month_factor + healthfacility +"), paste(non_irs_hfs_nowhitespace, collapse = "+")))
rf_synth_control <- ranger(form, data = births_pre_irs_month_hf_gapfilled_irs_train)
# compare observed/expected
plot(predict(rf_synth_control, births_pre_irs_month_hf_gapfilled_irs_train)$predictions, births_pre_irs_month_hf_gapfilled_irs_train$x)
abline(0,1)
births_pre_irs_month_hf_gapfilled_irs_validation <- births_pre_irs_month_hf_gapfilled_irs[births_pre_irs_month_hf_gapfilled_irs$month_factor>=25,]
# compare observed/expected in validation year
plot(predict(rf_synth_control, births_pre_irs_month_hf_gapfilled_irs_validation)$predictions, births_pre_irs_month_hf_gapfilled_irs_validation$x)
abline(0,1)
?ranger
head(births_pre_irs_month_hf_gapfilled_irs_train)
head(births_pre_irs_month_hf_gapfilled)
h2o.init()
library(h2o)
h2o.init()
?h2o.automl
is.factor(lbw_pre_irs_complete$LBW)
# Try RF (treating prevalence as continuous outcome)
lbw_pre_irs_complete$LBW <- as.factor(lbw_pre_irs_complete$LBW)
lbw_pre_irs_complete$LBW
rf_mod <- ranger(lbw_pre_irs_complete$LBW ~ month_factor + healthfacility,
data = lbw_pre_irs_complete, probability = TRUE)
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
abline(0,1)
tt<-as.h2o(lbw_pre_irs_complete)
# Try h2o ensemble
h2o_mod <- h2o.autoML(c("month_factor", "healthfacility"),
y = "LBW",
training_frame = as.h2o(lbw_pre_irs_complete),
max_runtime_secs = 300)
# Try h2o ensemble
h2o_mod <- h2o.automl(c("month_factor", "healthfacility"),
y = "LBW",
training_frame = as.h2o(lbw_pre_irs_complete),
max_runtime_secs = 300)
plot(predict(h2o_mod, as.h2o(births_pre_irs_month_hf)), births_pre_irs_month_hf$x)
ttt<-predict(h2o_mod, as.h2o(births_pre_irs_month_hf))
head(ttt)
plot(predict(h2o_mod, as.h2o(births_pre_irs_month_hf))[,3], births_pre_irs_month_hf$x)
dim(ttt)
dim(births_pre_irs_month_hf)
ttt<-predict(h2o_mod, as.h2o(births_pre_irs_month_hf))[,3]
length(ttt)
ttt
ttt[1]
ttt[,1]
as.vector(ttt)
plot(as.vector(predict(h2o_mod, as.h2o(births_pre_irs_month_hf))[,3]), births_pre_irs_month_hf$x)
abline(0,1)
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
abline(0,1)
plot(as.vector(predict(h2o_mod, as.h2o(births_pre_irs_month_hf))[,3]), births_pre_irs_month_hf$x)
abline(0,1)
mse
h2o_mod <- h2o.automl(c("month_factor", "healthfacility"),
y = "LBW",
training_frame = as.h2o(lbw_pre_irs_complete),
max_runtime_secs = 600)
plot(as.vector(predict(h2o_mod, as.h2o(births_pre_irs_month_hf))[,3]), births_pre_irs_month_hf$x)
abline(0,1)
library(hydroGOF)
# Compare
mse(as.vector(predict(h2o_mod, as.h2o(births_pre_irs_month_hf))[,3]),
births_pre_irs_month_hf$x)
# Compare
mse(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2],
births_pre_irs_month_hf$x)
plot(predict(rf_mod, births_pre_irs_month_hf)$predictions[,2], births_pre_irs_month_hf$x)
abline(0,1)
library(rgdal)
library(sen2r)
sen2r()
sen2r()
sen2r()
library(sen2r)
sen2r()
lf_data <- fromJSON(readLines("/Users/sturrockh/Documents/Work/MEI/DiSARM/NTDs/LF/Samoa/test_req_samoa_6_24.json"))
library(jsonlite)
lf_data <- fromJSON(readLines("/Users/sturrockh/Documents/Work/MEI/DiSARM/NTDs/LF/Samoa/test_req_samoa_6_24.json"))
lf_data$region_definition
lf_data$train_data
lf_data$request_parameters
leaflet() %>% addTiles() %>% addCircleMarkers(lng = lf_data$train_data$lng,
lat = lf_data$train_data$lat)
library(leaflet)
leaflet() %>% addTiles() %>% addCircleMarkers(lng = lf_data$train_data$lng,
lat = lf_data$train_data$lat)
library(ranger)
?ranger
ranger(Species ~ ., data = iris)
ranger(Species ~ ., data = iris, improtance = 'impurity')
ranger(Species ~ ., data = iris, importance = 'impurity')
tt<-ranger(Species ~ ., data = iris, importance = 'impurity')
tt$variable.importance
source('~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal/main.R')
getwd()
setwd("~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal")
source('~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal/main.R')
source('~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal/main.R')
rf_fit$variable.importance
tt$variable.importance
as.data.frame(tt$variable.importance)
source('~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal/main.R')
source('~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal/main.R')
source('~/Documents/Work/MEI/DiSARM/GitRepos/fn-cv-hal/fn-cv-hal/main.R')
